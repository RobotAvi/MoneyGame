#!/usr/bin/env bash
set -e

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
if [ -f "../config.env" ]; then
    source ../config.env
elif [ -f "config.env" ]; then
    source config.env
else
    echo "–û—à–∏–±–∫–∞: –§–∞–π–ª config.env –Ω–µ –Ω–∞–π–¥–µ–Ω!" >&2
    exit 1
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω –¥–ª—è gh CLI
export GH_TOKEN="$GITHUB_TOKEN"
# –û—Ç–∫–ª—é—á–∞–µ–º pager –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã
unset PAGER

WORKFLOW_NAME="$1"
MAX_RETRIES="${2:-3}"
MONITOR_DELAY="${3:-60}"

if [ -z "$WORKFLOW_NAME" ]; then
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <workflow_name> [max_retries] [monitor_delay_seconds]" >&2
    echo "–ü—Ä–∏–º–µ—Ä: $0 'üöÄ Stable Build & Release' 3 60" >&2
    exit 1
fi

echo "üöÄ –£–º–Ω—ã–π –∑–∞–ø—É—Å–∫ workflow: $WORKFLOW_NAME"
echo "üîÑ –ú–∞–∫—Å–∏–º—É–º –ø–æ–ø—ã—Ç–æ–∫: $MAX_RETRIES"
echo "‚è±Ô∏è  –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: ${MONITOR_DELAY}—Å"
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ—à–∏–±–æ–∫
analyze_failure() {
    local run_id="$1"
    echo "üîç –ê–Ω–∞–ª–∏–∑ –æ—à–∏–±–æ–∫ –≤ run $run_id..."
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ—É–¥–∞—á–Ω—ã—Ö job'–∞—Ö
    local failed_jobs=$(gh run view "$run_id" --json jobs --jq '.jobs[] | select(.conclusion == "failure") | {name: .name, id: .databaseId}')
    
    if [ -n "$failed_jobs" ]; then
        echo "‚ùå –ù–µ—É–¥–∞—á–Ω—ã–µ job'—ã:"
        echo "$failed_jobs" | jq -r '.name + " (ID: " + (.id | tostring) + ")"'
        echo ""
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–≤—è–∑–∞–Ω—ã –ª–∏ –æ—à–∏–±–∫–∏ —Å —ç–º—É–ª—è—Ç–æ—Ä–æ–º
        if echo "$failed_jobs" | jq -r '.name' | grep -q "screenshots"; then
            echo "‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å Android —ç–º—É–ª—è—Ç–æ—Ä–æ–º"
            echo "üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
            echo "   - –≠–º—É–ª—è—Ç–æ—Ä –º–æ–∂–µ—Ç –Ω–µ —É—Å–ø–µ–≤–∞—Ç—å –∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è"
            echo "   - –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–≤–µ–ª–∏—á–∏—Ç—å –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è"
            echo "   - –ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–æ–ª—å–∫–æ build –±–µ–∑ screenshots"
            return 1
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ —Ç–∏–ø—ã –æ—à–∏–±–æ–∫
        if echo "$failed_jobs" | jq -r '.name' | grep -q "build"; then
            echo "‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å–æ —Å–±–æ—Ä–∫–æ–π"
            echo "üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
            echo "   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–±–æ—Ä–∫–∏"
            echo "   - –í–æ–∑–º–æ–∂–Ω–æ, –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏"
            return 2
        fi
    fi
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –∞–Ω–∞–ª–∏–∑–æ–º
monitor_with_analysis() {
    local run_id="$1"
    local max_attempts="${2:-60}"
    local delay="${3:-30}"
    
    echo "üîç –î–µ—Ç–∞–ª—å–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ run: $run_id"
    echo "‚è±Ô∏è  –ú–∞–∫—Å–∏–º—É–º –ø–æ–ø—ã—Ç–æ–∫: $max_attempts, –∏–Ω—Ç–µ—Ä–≤–∞–ª: ${delay}—Å"
    echo ""
    
    for ((i=1; i<=max_attempts; i++)); do
        echo "üìä –ü–æ–ø—ã—Ç–∫–∞ $i/$max_attempts..."
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–∞—Ç—É—Å–µ
        local run_info=$(gh run view "$run_id" --json status,conclusion,jobs)
        local status=$(echo "$run_info" | jq -r '.status')
        local conclusion=$(echo "$run_info" | jq -r '.conclusion // "running"')
        
        echo "   –°—Ç–∞—Ç—É—Å: $status"
        echo "   –†–µ–∑—É–ª—å—Ç–∞—Ç: $conclusion"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å job'–æ–≤
        if [ "$status" = "in_progress" ]; then
            echo "   üìã –ü—Ä–æ–≥—Ä–µ—Å—Å job'–æ–≤:"
            echo "$run_info" | jq -r '.jobs[] | "     \(.name): \(.status) \(.conclusion // "")"' | head -5
        fi
        
        if [ "$status" = "completed" ]; then
            if [ "$conclusion" = "success" ]; then
                echo "‚úÖ Workflow —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!"
                return 0
            else
                echo "‚ùå Workflow –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π: $conclusion"
                analyze_failure "$run_id"
                return 1
            fi
        fi
        
        if [ $i -lt $max_attempts ]; then
            echo "   ‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ ${delay}—Å..."
            sleep "$delay"
        fi
    done
    
    echo "‚è∞ –ü–†–ï–í–´–®–ï–ù–û –í–†–ï–ú–Ø –û–ñ–ò–î–ê–ù–ò–Ø!"
    echo "üîç –ê–Ω–∞–ª–∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è..."
    analyze_failure "$run_id"
    return 1
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –∑–∞–ø—É—Å–∫–∞
for ((retry=1; retry<=MAX_RETRIES; retry++)); do
    echo "üîÑ –ü–æ–ø—ã—Ç–∫–∞ $retry/$MAX_RETRIES"
    echo "üöÄ –ó–∞–ø—É—Å–∫ workflow..."
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º workflow
    gh workflow run "$WORKFLOW_NAME"
    
    # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –ø–µ—Ä–µ–¥ –ø–µ—Ä–≤–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ 10 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–µ—Ä–≤–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π..."
    sleep 10
    
    # –ü–æ–ª—É—á–∞–µ–º ID –∑–∞–ø—É—Å–∫–∞
    run_info=$(gh run list --workflow="$WORKFLOW_NAME" --limit 1 --json databaseId,status)
    run_id=$(echo "$run_info" | jq -r '.[0].databaseId')
    
    echo "üìã Run ID: $run_id"
    echo "üîó URL: https://github.com/RobotAvi/MoneyGame/actions/runs/$run_id"
    echo ""
    
    # –ú–æ–Ω–∏—Ç–æ—Ä–∏–º —Å –∞–Ω–∞–ª–∏–∑–æ–º
    if monitor_with_analysis "$run_id" 60 "$MONITOR_DELAY"; then
        echo "üéâ –£–°–ü–ï–•! Workflow –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —É—Å–ø–µ—à–Ω–æ!"
        exit 0
    else
        echo "‚ùå –ü–æ–ø—ã—Ç–∫–∞ $retry –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å –Ω–µ—É–¥–∞—á–Ω–æ"
        
        if [ $retry -lt $MAX_RETRIES ]; then
            echo "üîÑ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–µ..."
            echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ 30 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π..."
            sleep 30
            echo ""
        fi
    fi
done

echo "üí• –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã. Workflow –Ω–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å —É—Å–ø–µ—à–Ω–æ."
echo "üîç –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
echo "   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—É—Å–∫–∞"
echo "   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã"
echo "   - –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å–∫–∞ –±–µ–∑ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö job'–æ–≤"
exit 1