#!/bin/bash

# üöÄ –°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è —Å–±–æ—Ä–∫–∏ stable
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç –≤—Å–µ —à–∞–≥–∏ –∏–∑ .github/workflows/stable-build.yml
# –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –æ—Ç–ª–∞–¥–∫–∏

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ
set -o pipefail  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ –≤ –ø–∞–π–ø–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤
export MAESTRO_CLI_ANALYSIS_NOTIFICATION_DISABLED="true"

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
run_with_timeout() {
    local timeout_seconds=900
    local cmd="$@"
    
    log_info "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã —Å —Ç–∞–π–º–∞—É—Ç–æ–º ${timeout_seconds}—Å: $cmd"
    
    timeout $timeout_seconds bash -c "$cmd"
    local exit_code=$?
    
    if [ $exit_code -eq 124 ]; then
        log_error "–ö–æ–º–∞–Ω–¥–∞ –ø—Ä–µ–≤—ã—Å–∏–ª–∞ —Ç–∞–π–º–∞—É—Ç ${timeout_seconds} —Å–µ–∫—É–Ω–¥"
        return 1
    elif [ $exit_code -ne 0 ]; then
        log_error "–ö–æ–º–∞–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π (–∫–æ–¥: $exit_code)"
        return $exit_code
    fi
    
    log_success "–ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
    return 0
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Java
    if ! command -v java &> /dev/null; then
        log_error "Java –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ JDK 21"
        exit 1
    fi
    
    java_version=$(java -version 2>&1 | head -n 1 | cut -d'"' -f2 | cut -d'.' -f1)
    if [ "$java_version" != "21" ]; then
        log_warning "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è Java 21, –Ω–∞–π–¥–µ–Ω–∞ –≤–µ—Ä—Å–∏—è: $java_version"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Android SDK
    if [ -z "$ANDROID_SDK_ROOT" ]; then
        log_warning "ANDROID_SDK_ROOT –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Android SDK..."
        install_android_sdk
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ gradlew
    if [ ! -f "gradlew" ]; then
        log_error "gradlew –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞"
        exit 1
    fi
    
    chmod +x gradlew
    log_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Android SDK
install_android_sdk() {
    log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Android SDK..."
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è SDK
    export ANDROID_SDK_ROOT="$HOME/android-sdk"
    mkdir -p "$ANDROID_SDK_ROOT"
    
    # –°–∫–∞—á–∏–≤–∞–µ–º command line tools
    if [ ! -f "cmdline-tools.zip" ]; then
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
    fi
    
    # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º
    unzip -o cmdline-tools.zip -d "$HOME"
    mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
    mv "$HOME/cmdline-tools" "$ANDROID_SDK_ROOT/cmdline-tools/latest"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–Ω—ã–µ –ø—É—Ç–∏ –≤ PATH
    export PATH="$PATH:$ANDROID_SDK_ROOT/emulator"
    export PATH="$PATH:$ANDROID_SDK_ROOT/platform-tools"
    export PATH="$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin"
    
    # –ü—Ä–∏–Ω–∏–º–∞–µ–º –ª–∏—Ü–µ–Ω–∑–∏–∏ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    yes | sdkmanager --licenses
    sdkmanager "platform-tools" "emulator" "system-images;android-34;default;x86_64"
    
    log_success "Android SDK —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–µ—Ä—Å–∏–∏
get_version_info() {
    log_info "–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–µ—Ä—Å–∏–∏..."
    
    VERSION=$(grep -oP 'versionName\s+"\K[^"]+' app/build.gradle)
    VERSION_CODE=$(grep -oP 'versionCode\s+\K[0-9]+' app/build.gradle)
    DATE=$(date +'%Y-%m-%d_%H-%M')
    
    echo "üì± Version: $VERSION"
    echo "üî¢ Version Code: $VERSION_CODE"
    echo "üìÖ Date: $DATE"
    
    export VERSION VERSION_CODE DATE
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Å–±–æ—Ä–∫–∞
build_project() {
    log_info "–ù–∞—á–∏–Ω–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Å–±–æ—Ä–∫—É..."
    
    # –û—á–∏—Å—Ç–∫–∞
    log_info "–û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."
    ./gradlew clean --no-daemon
    
    # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
    log_info "–ó–∞–ø—É—Å–∫ unit —Ç–µ—Å—Ç–æ–≤..."
    ./gradlew test --no-daemon
    
    # –°–±–æ—Ä–∫–∞ debug APK
    log_info "–°–±–æ—Ä–∫–∞ debug APK..."
    ./gradlew assembleDebug --no-daemon
    
    log_success "–û—Å–Ω–æ–≤–Ω–∞—è —Å–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ APK –¥–ª—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è
prepare_apk() {
    log_info "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ APK –¥–ª—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è..."
    
    mkdir -p releases/debug
    cp app/build/outputs/apk/debug/app-debug.apk releases/debug/
    cd releases/debug
    
    # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º —Å –≤–µ—Ä—Å–∏–µ–π –∏ –¥–∞—Ç–æ–π
    newname="FinancialSuccess-v$VERSION-$DATE-debug.apk"
    mv -f app-debug.apk "$newname"
    
    # –°–æ–∑–¥–∞–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É –Ω–∞ latest
    ln -sf "$newname" "latest-debug.apk"
    
    # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ APK (–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ 5 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö)
    ls -tp FinancialSuccess-v*-debug.apk | grep -v '/$' | tail -n +6 | xargs -r rm -- 2>/dev/null || true
    
    cd ../..
    
    log_success "APK –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω: $newname"
    ls -la releases/debug/
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Maestro
install_maestro() {
    log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Maestro..."
    
    if ! command -v maestro &> /dev/null; then
        timeout 300 bash -c 'echo "n" | curl -Ls "https://get.maestro.mobile.dev" | bash'
        export PATH="$PATH:$HOME/.maestro/bin"
    fi
    
    echo "n" | maestro --version
    log_success "Maestro —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
}

# –ó–∞–ø—É—Å–∫ —ç–º—É–ª—è—Ç–æ—Ä–∞
start_emulator() {
    local device_type=$1
    local profile=$2
    
    log_info "–ó–∞–ø—É—Å–∫ —ç–º—É–ª—è—Ç–æ—Ä–∞ –¥–ª—è $device_type ($profile)..."
    
    # –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∏–º–µ–Ω–∞ AVD (–∑–∞–º–µ–Ω—è–µ–º –ø—Ä–æ–±–µ–ª—ã –Ω–∞ _)
    local safe_profile=$(echo "$profile" | tr ' ' '_')
    avd_name="test_${device_type}_${safe_profile}"
    
    if ! avdmanager list avd | grep -q "$avd_name"; then
        log_info "–°–æ–∑–¥–∞–Ω–∏–µ AVD: $avd_name"
        echo "no" | avdmanager create avd \
            --name "$avd_name" \
            --package "system-images;android-34;default;x86_64" \
            --device "$profile"
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —ç–º—É–ª—è—Ç–æ—Ä
    emulator -avd "$avd_name" \
        -no-window \
        -gpu swiftshader_indirect \
        -noaudio \
        -no-boot-anim \
        -accel off \
        -no-snapshot \
        -no-metrics &
    
    EMULATOR_PID=$!
    
    # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —ç–º—É–ª—è—Ç–æ—Ä–∞ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
    log_info "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —ç–º—É–ª—è—Ç–æ—Ä–∞ (—Ç–∞–π–º–∞—É—Ç: 120—Å)..."
    emulator_timeout=120
    boot_timeout=180
    
    sleep 30
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç–º—É–ª—è—Ç–æ—Ä –∑–∞–ø—É—Å—Ç–∏–ª—Å—è —Å —Ç–∞–π–º–∞—É—Ç–æ–º
    for i in {1..60}; do
        if adb devices | grep -q "emulator"; then
            log_success "–≠–º—É–ª—è—Ç–æ—Ä $device_type –∑–∞–ø—É—â–µ–Ω"
            break
        fi
        if [ $i -eq 60 ]; then
            log_error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —ç–º—É–ª—è—Ç–æ—Ä $device_type –∑–∞ $emulator_timeout —Å–µ–∫—É–Ω–¥"
            kill $EMULATOR_PID 2>/dev/null || true
            exit 1
        fi
        sleep 2
    done
    
    # –ñ–¥–µ–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ Android —Å —Ç–∞–π–º–∞—É—Ç–æ–º
    log_info "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ Android (—Ç–∞–π–º–∞—É—Ç: ${boot_timeout}—Å)..."
    for i in {1..90}; do
        if adb shell getprop sys.boot_completed 2>/dev/null | grep -q "1"; then
            log_success "Android –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞ —ç–º—É–ª—è—Ç–æ—Ä–µ $device_type"
            break
        fi
        if [ $i -eq 90 ]; then
            log_warning "Android –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è –∑–∞ $boot_timeout —Å–µ–∫—É–Ω–¥, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º..."
        fi
        sleep 2
    done
    
    # –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º —ç–∫—Ä–∞–Ω
    adb shell input keyevent 82
    adb shell input keyevent 82
    sleep 5
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ APK –Ω–∞ —ç–º—É–ª—è—Ç–æ—Ä
install_apk_on_emulator() {
    local device_type=$1
    
    log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ APK –Ω–∞ —ç–º—É–ª—è—Ç–æ—Ä $device_type..."
    
    adb install releases/debug/*.apk
    adb shell pm list packages | grep financialsuccess
    sleep 3
    
    log_success "APK —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ —ç–º—É–ª—è—Ç–æ—Ä $device_type"
}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
generate_screenshots() {
    local device_type=$1
    
    log_info "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –¥–ª—è $device_type..."
    
    mkdir -p "screenshots/$device_type"
    
    # –ü—Ä–æ–±—É–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    local config_file="maestro/screenshots-$device_type.yaml"
    if [ ! -f "$config_file" ]; then
        config_file="maestro/screenshots.yaml"
    fi
    
    if [ -f "$config_file" ]; then
        maestro test "$config_file" --format junit --output "screenshots/$device_type/"
        log_success "–°–∫—Ä–∏–Ω—à–æ—Ç—ã –¥–ª—è $device_type —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã"
    else
        log_warning "–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Maestro –Ω–µ –Ω–∞–π–¥–µ–Ω: $config_file"
    fi
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —ç–º—É–ª—è—Ç–æ—Ä–∞
stop_emulator() {
    if [ ! -z "$EMULATOR_PID" ]; then
        log_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —ç–º—É–ª—è—Ç–æ—Ä–∞..."
        kill $EMULATOR_PID 2>/dev/null || true
        sleep 5
    fi
    
    # –£–±–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã —ç–º—É–ª—è—Ç–æ—Ä–∞
    pkill -f emulator 2>/dev/null || true
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log_info "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Å–±–æ—Ä–∫–∏ stable..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
    if [ ! -f "app/build.gradle" ]; then
        log_error "–°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    check_dependencies
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–µ—Ä—Å–∏–∏
    get_version_info
    
    # –û—Å–Ω–æ–≤–Ω–∞—è —Å–±–æ—Ä–∫–∞ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
    run_with_timeout build_project
    
    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º APK
    prepare_apk
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Maestro
    install_maestro
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    log_info "=== –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞ ==="
    start_emulator "phone" "Nexus 6"
    install_apk_on_emulator "phone"
    generate_screenshots "phone"
    stop_emulator
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –¥–ª—è –ø–ª–∞–Ω—à–µ—Ç–∞
    log_info "=== –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –¥–ª—è –ø–ª–∞–Ω—à–µ—Ç–∞ ==="
    start_emulator "tablet" "Nexus 10"
    install_apk_on_emulator "tablet"
    generate_screenshots "tablet"
    stop_emulator
    
    # –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
    log_success "üéâ –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Å–±–æ—Ä–∫–∏ stable –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
    echo ""
    echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:"
    echo "üì± Version: $VERSION"
    echo "üî¢ Version Code: $VERSION_CODE"
    echo "üìÖ Date: $DATE"
    echo "üì¶ APK: releases/debug/FinancialSuccess-v$VERSION-$DATE-debug.apk"
    echo "üì∏ Phone screenshots: screenshots/phone/"
    echo "üì∏ Tablet screenshots: screenshots/tablet/"
    echo ""
    echo "üìÅ –§–∞–π–ª—ã:"
    ls -la releases/debug/
    echo ""
    echo "üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç—ã —Ç–µ–ª–µ—Ñ–æ–Ω–∞:"
    ls -la screenshots/phone/ 2>/dev/null || echo "–ù–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
    echo ""
    echo "üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç—ã –ø–ª–∞–Ω—à–µ—Ç–∞:"
    ls -la screenshots/tablet/ 2>/dev/null || echo "–ù–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –ø–ª–∞–Ω—à–µ—Ç–∞"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
trap 'log_warning "–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è. –û—á–∏—Å—Ç–∫–∞..."; stop_emulator; exit 1' INT TERM

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"