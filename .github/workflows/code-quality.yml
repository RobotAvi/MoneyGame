name: 🔍 Code Quality Check

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]

jobs:
  lint:
    name: 🧹 Lint & Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: ☕ Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: 💾 Cache Android SDK
      uses: actions/cache@v3
      with:
        path: $HOME/android-sdk
        key: ${{ runner.os }}-android-sdk-${{ hashFiles('app/build.gradle') }}
        restore-keys: |
          ${{ runner.os }}-android-sdk-
        
    - name: 📱 Set up Android SDK
      run: |
        if [ ! -d "$HOME/android-sdk/cmdline-tools/latest" ]; then
          echo "Installing Android SDK..."
          mkdir -p $HOME/android-sdk/cmdline-tools
          cd $HOME/android-sdk/cmdline-tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q commandlinetools-linux-11076708_latest.zip
          mv cmdline-tools latest
        else
          echo "Android SDK found in cache, skipping download"
        fi
        
    - name: 🌍 Set Android SDK environment variables
      run: |
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
        echo "$HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools" >> $GITHUB_PATH
        
    - name: 🔧 Install Android SDK components
      run: |
        yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses || true
        $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --install "platforms;android-34"
        $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --install "build-tools;34.0.0"
        $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --install "platform-tools"
        
    - name: 🎯 Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: 📦 Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: 🔍 Run Android Lint
      run: ./gradlew lintDebug --stacktrace
      continue-on-error: true
      
    - name: 🧹 Run Kotlin Lint (ktlint)
      run: ./gradlew ktlintCheck --stacktrace
      continue-on-error: true
      
    - name: 🔎 Run Detekt (Static Analysis)
      run: ./gradlew detekt --stacktrace
      continue-on-error: true
      
    - name: 📊 Generate lint report
      if: always()
      run: |
        echo "📋 Lint Report Summary:"
        
        # Android Lint
        if [ -f "app/build/reports/lint-results-debug.html" ]; then
          echo "✅ Android Lint report generated"
        else
          echo "❌ Android Lint report not found"
        fi
        
        # Detekt
        if [ -f "app/build/reports/detekt/detekt.html" ]; then
          echo "✅ Detekt report generated"
        else
          echo "❌ Detekt report not found"
        fi
        
    - name: 📤 Upload lint reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: lint-reports
        path: |
          app/build/reports/lint-results-debug.html
          app/build/reports/detekt/
        retention-days: 7

  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🛡️ Run security scan with CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: java-kotlin
        
    - name: 🏗️ Autobuild CodeQL
      uses: github/codeql-action/autobuild@v3
      
    - name: 🔍 Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:java-kotlin"
        
    - name: 🔍 Simple secret scan
      run: |
        echo "🔍 Searching for potential secrets..."
        # Простая проверка на наличие потенциальных секретов
        if grep -r "password\|secret\|key\|token" --include="*.kt" --include="*.java" . || true; then
          echo "⚠️ Found potential secrets (review manually)"
        else
          echo "✅ No obvious secrets found"
        fi

  dependencies:
    name: 📦 Dependency Check
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: ☕ Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: 🎯 Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: 📦 Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: 🔍 Check for outdated dependencies
      run: ./gradlew dependencyUpdates --stacktrace
      continue-on-error: true
      
    - name: 📊 Generate dependency report
      run: ./gradlew dependencies --stacktrace
      
    - name: 📤 Upload dependency reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: dependency-reports
        path: |
          build/dependencyUpdates/
        retention-days: 7